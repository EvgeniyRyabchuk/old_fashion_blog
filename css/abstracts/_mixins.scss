

@mixin b-img-nr-contain($url) {
      background-image: url("../../"+$url);
      background-repeat: no-repeat;
      background-size: contain;  

      background-position: center;
}

@mixin animated-appear-via-visibility($time: 0.5s, $translateX: null) {
  @if $translateX != null {
    transform: translateX($translateX);
  }
  opacity: 1;
  visibility: visible;
  pointer-events: auto;
  transition: opacity $time ease, transform $time ease;
}

@mixin animated-disappear-via-visibility($time: 0.5s, $translateX: null) {
  @if $translateX != null {
    transform: translateX($translateX);
  }
  opacity: 0;
  visibility: hidden;
  pointer-events: none;
 transition: opacity $time ease, transform $time ease, visibility 0s $time, pointer-events 0s $time;
}

/*
@mixin animated-appear-via-height-v1($is-open: false) {
  @if $is-open {
  transform: scaleY(1);
  visibility: visible;
  } @else {
  transform: scaleY(0);
  transform-origin: top;
  transition: transform 0.5s ease-in-out;
  visibility: hidden;
  }
}
*/

//TODO: fix 
// delay 
@mixin animated-appear-via-max-height($is-open: false, $time: 0.3, $max: 1000px) {
  @if $is-open {
    // Set a large max-height
    //TODO: cacl automaticaly 
    max-height: $max;
    overflow: hidden; 
    // Use a very short transition for a near-instant effect
    transition: max-height $time ease-in-out;
  } @else {
    max-height: 0;
    overflow: hidden;
    // Match the transition for a smooth collapse
    transition: max-height $time ease-in-out;
  }
}




// Flexbox utility generator
@mixin flexbox($direction: row, $justify: null, $align: null, $wrap: null, $gap: null) {
  display: flex;
  flex-direction: $direction;

  @if $justify != null {
    justify-content: $justify;
  }

  @if $align != null {
    align-items: $align;
  }

  @if $wrap != null {
    flex-wrap: $wrap;
  }

  @if $gap != null {
    gap: $gap;
  }
}